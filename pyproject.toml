[tool.pyright]
include = ["Writer", "tests"]
exclude = ["**/__pycache__", "**/.pytest_cache"]
reportMissingImports = true
reportMissingTypeStubs = false
pythonVersion = "3.11"
typeCheckingMode = "basic"

# Specific error reporting
reportUnusedImport = true
reportUnusedClass = false
reportUnusedFunction = false
reportUnusedVariable = false
reportDuplicateImport = true
reportOptionalMemberAccess = true
reportOptionalCall = true
reportOptionalIterable = true
reportOptionalContextManager = true
reportOptionalOperand = true
reportIncompatibleMethodOverride = true
reportIncompatibleVariableOverride = true
reportCallIssue = true
reportArgumentType = true
reportAssignmentType = true
reportReturnType = true
reportAttributeAccessIssue = true

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false  # Start lenient, can tighten later
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

# Per-module options for gradual adoption
[[tool.mypy.overrides]]
module = [
    "Writer.Chapter.*",
    "Writer.Interface.*", 
    "Writer.Pipeline",
    "Writer.OutlineGenerator"
]
disallow_untyped_defs = true
check_untyped_defs = true

[tool.flake8]
max-line-length = 120
ignore = ["E501", "W504", "W503", "E203", "W291"]
exclude = [
    ".git",
    "__pycache__",
    ".pytest_cache",
    ".venv",
    "venv",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--disable-warnings",
    "--tb=short"
]
markers = [
    "integration: Integration tests that call real functions",
    "unit: Unit tests with mocking",
    "contract: Contract tests for mock validation",
    "slow: Tests that take a long time to run"
]